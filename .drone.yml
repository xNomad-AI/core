depends_on: []
kind: pipeline
name: dev
steps:
  - depends_on: []
    environment: {}
    image: plugins/docker
    name: publish-
    settings:
      build_args:
        - ENV=dev
      build_args_from_env: []
      dockerfile: Dockerfile
      password:
        from_secret: docker_dev_password
      registry:
        from_secret: docker_dev_registry
      repo:
        from_secret: docker_dev_repo
      tags:
        - dev-${DRONE_COMMIT_SHA}
        - dev
      username:
        from_secret: docker_dev_username
    volumes: []
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
    working_dir: ${DRONE_WORKSPACE}
  - depends_on:
      - publish-
    image: wangwenpei/drone-kubernetes
    name: deploy-
    settings:
      container: ${DRONE_REPO_NAME}
      deployment: ${DRONE_REPO_NAME}-dev
      kubernetes_cert:
        from_secret: kube_dev_cert
      kubernetes_server:
        from_secret: kube_dev_api
      kubernetes_token:
        from_secret: kube_dev_token
      namespace:
        from_secret: kube_dev_namespace
      repo:
        from_secret: docker_dev_repo
      tag: dev-${DRONE_COMMIT_SHA}
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
  - commands:
      - kubectl rollout status deployment/${DRONE_REPO_NAME}-dev -s="$SERVER" --token="$TOKEN"
        --insecure-skip-tls-verify=true -n "$NAMESPACE" --timeout=10m
    depends_on:
      - deploy-
    environment:
      NAMESPACE:
        from_secret: kube_dev_namespace
      SERVER:
        from_secret: kube_dev_api
      TOKEN:
        from_secret: kube_dev_token
    image: bitnami/kubectl
    name: deploy--check
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
trigger:
  ref:
    - refs/heads/develop
    - refs/heads/deploy/*
type: docker
volumes: []
---
depends_on: []
kind: pipeline
name: wallet
steps:
  - depends_on: []
    environment: {}
    image: plugins/docker
    name: publish-wallet
    settings:
      build_args:
        - ENV=dev
      build_args_from_env: []
      dockerfile: wallet.Dockerfile
      password:
        from_secret: docker_dev_password
      registry:
        from_secret: docker_dev_registry
      repo:
        from_secret: docker_dev_repo_wallet
      tags:
        - dev-${DRONE_COMMIT_SHA}
        - dev
      username:
        from_secret: docker_dev_username
    volumes: []
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
    working_dir: ${DRONE_WORKSPACE}
  - depends_on:
      - publish-wallet
    image: wangwenpei/drone-kubernetes
    name: deploy-wallet
    settings:
      container: ${DRONE_REPO_NAME}-wallet
      deployment: ${DRONE_REPO_NAME}-wallet-dev
      kubernetes_cert:
        from_secret: kube_dev_cert
      kubernetes_server:
        from_secret: kube_dev_api
      kubernetes_token:
        from_secret: kube_dev_token
      namespace:
        from_secret: kube_dev_namespace
      repo:
        from_secret: docker_dev_repo_wallet
      tag: dev-${DRONE_COMMIT_SHA}
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
  - commands:
      - kubectl rollout status deployment/${DRONE_REPO_NAME}-wallet-dev -s="$SERVER"
        --token="$TOKEN" --insecure-skip-tls-verify=true -n "$NAMESPACE" --timeout=10m
    depends_on:
      - deploy-wallet
    environment:
      NAMESPACE:
        from_secret: kube_dev_namespace
      SERVER:
        from_secret: kube_dev_api
      TOKEN:
        from_secret: kube_dev_token
    image: bitnami/kubectl
    name: deploy-wallet-check
    when:
      ref:
        - refs/heads/develop
        - refs/heads/deploy/*
trigger:
  ref: refs/heads/deploy/wallet
type: docker
volumes: []
---
depends_on: []
kind: pipeline
name: prod
steps:
  - depends_on: []
    environment: {}
    image: plugins/docker
    name: publish-
    settings:
      build_args:
        - ENV=prod
      build_args_from_env: []
      dockerfile: Dockerfile
      password:
        from_secret: docker_production_password
      registry:
        from_secret: docker_production_registry
      repo:
        from_secret: docker_production_repo
      tags:
        - prod-${DRONE_COMMIT_SHA}
        - master
      username:
        from_secret: docker_production_username
    volumes: []
    when:
      ref:
        - refs/heads/master
    working_dir: ${DRONE_WORKSPACE}
  - depends_on:
      - publish-
    image: wangwenpei/drone-kubernetes
    name: deploy-
    settings:
      container: ${DRONE_REPO_NAME}
      deployment: ${DRONE_REPO_NAME}-prod
      kubernetes_cert:
        from_secret: kube_production_cert
      kubernetes_server:
        from_secret: kube_production_api
      kubernetes_token:
        from_secret: kube_production_token
      namespace:
        from_secret: kube_production_namespace
      repo:
        from_secret: docker_production_repo
      tag: prod-${DRONE_COMMIT_SHA}
    when:
      ref:
        - refs/heads/master
  - commands:
      - kubectl rollout status deployment/${DRONE_REPO_NAME}-prod -s="$SERVER" --token="$TOKEN"
        --insecure-skip-tls-verify=true -n "$NAMESPACE" --timeout=10m
    depends_on:
      - deploy-
    environment:
      NAMESPACE:
        from_secret: kube_production_namespace
      SERVER:
        from_secret: kube_production_api
      TOKEN:
        from_secret: kube_production_token
    image: bitnami/kubectl
    name: deploy--check
    when:
      ref:
        - refs/heads/master
trigger:
  ref:
    - refs/heads/master
type: docker
volumes: []
